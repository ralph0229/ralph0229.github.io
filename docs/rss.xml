<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Ralph's Blog</title><link>https://ralph0229.github.io</link><description>some records</description><copyright>Ralph's Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://ralph0229.github.io</link></image><lastBuildDate>Thu, 04 Jul 2024 08:35:09 +0000</lastBuildDate><managingEditor>Ralph's Blog</managingEditor><ttl>60</ttl><webMaster>Ralph's Blog</webMaster><item><title>Ubuntu 22.04 部署 docker-compose</title><link>https://ralph0229.github.io/post/Ubuntu%2022.04%20-bu-shu-%20docker-compose.html</link><description>### 在部署完Docker之后, 为了方便的管理镜像的部署, 遂考虑部署docker-compose&#13;
首先还是阅读官方文档&#13;
&#13;
[On Linux](https://docs.docker.com/compose/install/standalone/#on-linux)&#13;
&#13;
```&#13;
Compose standalone&#13;
&#13;
Note that Compose standalone uses the -compose syntax instead of the current standard syntax compose.&#13;
For example type docker-compose up when using Compose standalone, instead of docker compose up.&#13;
&#13;
```&#13;
1. To download and install Compose standalone, run:&#13;
&#13;
```&#13;
 curl -SL https://github.com/docker/compose/releases/download/v2.28.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose&#13;
```&#13;
2. Apply executable permissions to the standalone binary in the target path for the installation.&#13;
&#13;
```&#13;
# 给docker-compose文件相应的权限&#13;
sudo chmod 777 /usr/local/bin/docker-compose&#13;
```&#13;
3. If the command docker-compose fails after installation, check your path. You can also create a symbolic link to /usr/bin or any other directory in your path. For example:&#13;
&#13;
&#13;
```&#13;
# 为了直接使用docker-compose命令 将其链接到/usr/bin/下&#13;
 sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose&#13;
```&#13;
4. Test and execute compose commands using docker-compose.&#13;
```&#13;
docker-compose -v&#13;
Docker Compose version v2.28.1&#13;
```&#13;
。</description><guid isPermaLink="true">https://ralph0229.github.io/post/Ubuntu%2022.04%20-bu-shu-%20docker-compose.html</guid><pubDate>Thu, 04 Jul 2024 08:34:27 +0000</pubDate></item><item><title>使用Cloudflare Workers搭建自己的docker hub 代理服务</title><link>https://ralph0229.github.io/post/shi-yong-Cloudflare%20Workers-da-jian-zi-ji-de-docker%20hub%20-dai-li-fu-wu.html</link><description>#### 书接上回, 在成功部署Docker后, 拉取hello-world镜像超时, 这里选择自己搭建镜像源来解决该问题&#13;
&#13;
参考仓库 [CF-Workers-docker.io](https://github.com/cmliu/CF-Workers-docker.io)&#13;
&#13;
这个项目是一个基于 Cloudflare Workers 的 Docker 镜像代理工具。</description><guid isPermaLink="true">https://ralph0229.github.io/post/shi-yong-Cloudflare%20Workers-da-jian-zi-ji-de-docker%20hub%20-dai-li-fu-wu.html</guid><pubDate>Thu, 04 Jul 2024 08:14:59 +0000</pubDate></item><item><title>Ubuntu 22.04 以Package方式部署 Docker</title><link>https://ralph0229.github.io/post/Ubuntu%2022.04%20-yi-Package-fang-shi-bu-shu-%20Docker.html</link><description>#### 背景: &#13;
新搞了台服务器, 用来搭建种种服务, 这个时候就要搭建一个Dokcer环境; 但是目前的网络状况你们懂的, 无法直接访问docker.com, 遂尝试另一种搭建方案&#13;
&#13;
首先阅读Docker官方文档&#13;
[Install from a package](https://docs.docker.com/engine/install/ubuntu/#install-from-a-package)&#13;
If you can't use Docker's apt repository to install Docker Engine, you can download the deb file for your release and install it manually. You need to download a new file each time you want to upgrade Docker Engine.&#13;
1. Go to https://download.docker.com/linux/ubuntu/dists/.&#13;
&#13;
3. Select your Ubuntu version in the list.&#13;
&#13;
4. Go to pool/stable/ and select the applicable architecture (amd64, armhf, arm64, or s390x).&#13;
&#13;
5. Download the following deb files for the Docker Engine, CLI, containerd, and Docker Compose packages:&#13;
    - ontainerd.io_&lt;version&gt;_&lt;arch&gt;.deb&#13;
    - docker-ce_&lt;version&gt;_&lt;arch&gt;.deb&#13;
    - docker-ce-cli_&lt;version&gt;_&lt;arch&gt;.deb&#13;
    - docker-buildx-plugin_&lt;version&gt;_&lt;arch&gt;.deb&#13;
    - docker-compose-plugin_&lt;version&gt;_&lt;arch&gt;.deb&#13;
    ```&#13;
    去下载符合你对应系统的docker deb安装包&#13;
    我这里使用 lsb_release -a 查看了一下Ubuntu的发型版本&#13;
&#13;
    No LSB modules are available.&#13;
    Distributor ID: Ubuntu&#13;
    Description:    Ubuntu 22.04.3 LTS&#13;
    Release:        22.04&#13;
    Codename:       jammy&#13;
&#13;
    遂最后的目录是 https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/&#13;
    ```&#13;
&#13;
6. Install the .deb packages. Update the paths in the following example to where you downloaded the Docker packages.&#13;
```&#13;
# 将下载下来的deb包装包一起安装了&#13;
sudo dpkg -i ./containerd.io_&lt;version&gt;_&lt;arch&gt;.deb \&#13;
  ./docker-ce_&lt;version&gt;_&lt;arch&gt;.deb \&#13;
  ./docker-ce-cli_&lt;version&gt;_&lt;arch&gt;.deb \&#13;
  ./docker-buildx-plugin_&lt;version&gt;_&lt;arch&gt;.deb \&#13;
  ./docker-compose-plugin_&lt;version&gt;_&lt;arch&gt;.deb&#13;
```&#13;
7. Verify that the Docker Engine installation is successful by running the hello-world image.&#13;
```&#13;
# 这里是通过运行hello-world镜像来验证docker安装情况&#13;
sudo service docker start&#13;
sudo docker run hello-world&#13;
```&#13;
&#13;
本应该到这里就结束了, 但是由于那个原因, 直接docker run hello-world会拉取镜像超时;&#13;
这里我选择用Cloudflare部署一个docker hub的代理服务, 来解决拉取镜像超时的问题, 请看下一篇文章.。</description><guid isPermaLink="true">https://ralph0229.github.io/post/Ubuntu%2022.04%20-yi-Package-fang-shi-bu-shu-%20Docker.html</guid><pubDate>Thu, 04 Jul 2024 07:57:26 +0000</pubDate></item><item><title>First test</title><link>https://ralph0229.github.io/post/First%20test.html</link><description># This is a tittle&#13;
&#13;
### First&#13;
&#13;
*bold*&#13;
&#13;
```java&#13;
public static void main(String[] args) {&#13;
    System.out.println('Hello Blog~!');&#13;
}&#13;
```。</description><guid isPermaLink="true">https://ralph0229.github.io/post/First%20test.html</guid><pubDate>Wed, 03 Jul 2024 11:39:46 +0000</pubDate></item></channel></rss>